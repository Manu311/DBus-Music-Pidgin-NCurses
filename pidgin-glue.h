
/*
 *	This file was automatically generated by dbusxx-xml2cpp; DO NOT EDIT!
 */

#ifndef __dbusxx__pidgin_glue_h__PROXY_MARSHAL_H
#define __dbusxx__pidgin_glue_h__PROXY_MARSHAL_H

#include <dbus-c++/dbus.h>

namespace im {
namespace pidgin {
namespace purple {

class PurpleInterface_proxy
 : public ::DBus::InterfaceProxy
{
public:

    PurpleInterface_proxy()
    : ::DBus::InterfaceProxy("im.pidgin.purple.PurpleInterface")
    {
        connect_signal(PurpleInterface_proxy, ReceivedImMsg, _ReceivedImMsg_stub);
    }

public:

    /* properties exported by this interface */
public:

    /* methods exported by this interface,
     * this functions will invoke the corresponding methods on the remote objects
     */
    std::string PurpleBuddyGetContactAlias(const int32_t& buddy)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << buddy;
        call.member("PurpleBuddyGetContactAlias");
	
	::DBus::Message ret = invoke_method(call);
        ::DBus::MessageIter ri = ret.reader();

        std::string argout;
        ri >> argout;
        return argout;
    }
    
    int32_t PurpleFindBuddy(const int32_t& account, const std::string& name)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << account;
        wi << name;
        call.member("PurpleFindBuddy");
        ::DBus::Message ret = invoke_method(call);
        ::DBus::MessageIter ri = ret.reader();

        int32_t argout;
        ri >> argout;
        return argout;
    }
    
public:
	
    virtual void ReceivedImMsg(const int32_t& argin0, const std::string& argin1, const std::string& argin2, const int32_t& argin3, const uint32_t& argin4) = 0;
    
private:

    /* unmarshalers (to unpack the DBus message before calling the actual signal handler)
     */

    void _ReceivedImMsg_stub(const ::DBus::SignalMessage &sig)
    {
        ::DBus::MessageIter ri = sig.reader();

        int32_t arg0; ri >> arg0;
        std::string arg1; ri >> arg1;
        std::string arg2; ri >> arg2;
        int32_t arg3; ri >> arg3;
        uint32_t arg4; ri >> arg4;
        ReceivedImMsg(arg0, arg1, arg2, arg3, arg4);
    }

};

} } } 
#endif//__dbusxx__pidgin_glue_h__PROXY_MARSHAL_H
